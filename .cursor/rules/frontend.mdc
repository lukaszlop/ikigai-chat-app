---
description:
globs: *.tsx, *.ts
alwaysApply: false
---

## Frontend

### General Guidelines

#### Next.js App Router & React Components

- Use React Server Components by default for better performance and SEO
- Add 'use client' directive only when client-side interactivity is required (event handlers, hooks, browser APIs)
- Follow Next.js 15 App Router conventions with the `/src/app` directory structure
- Use TypeScript for all components and maintain strict type safety
- Leverage Shadcn/ui components from `/src/components/ui` for consistent design system
- Implement proper error boundaries and loading states for better UX
- Use Zustand for client-side state management when needed

### Guidelines for Styling

#### Tailwind

- Use the @layer directive to organize styles into components, utilities, and base layers
- Use arbitrary values with square brackets (e.g., w-[123px]) for precise one-off designs
- Implement the Tailwind configuration file for customizing theme, plugins, and variants
- Leverage the theme() function in CSS for accessing Tailwind theme values
- Implement dark mode with the dark: variant
- Use responsive variants (sm:, md:, lg:, etc.) for adaptive designs
- Leverage state variants (hover:, focus-visible:, active:, etc.) for interactive elements

### Guidelines for Accessibility

#### ARIA Best Practices

- Use ARIA landmarks to identify regions of the page (main, navigation, search, etc.)
- Apply appropriate ARIA roles to custom interface elements that lack semantic HTML equivalents
- Set aria-expanded and aria-controls for expandable content like accordions and dropdowns
- Use aria-live regions with appropriate politeness settings for dynamic content updates
- Implement aria-hidden to hide decorative or duplicative content from screen readers
- Apply aria-label or aria-labelledby for elements without visible text labels
- Use aria-describedby to associate descriptive text with form inputs or complex elements
- Implement aria-current for indicating the current item in a set, navigation, or process
- Avoid redundant ARIA that duplicates the semantics of native HTML elements
